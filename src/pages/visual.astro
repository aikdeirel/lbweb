---
import Layout from '../layouts/Layout.astro';
import Pagination from '../components/Pagination.astro';
import newsData from '../../lbw-data/news.json';
import { validatePageParam, calculatePagination, shouldRedirectToFirstPage } from '../utils/pagination';
import { sortByDateDescending } from '../utils/date';
import type { NewsItem } from '../types/news';

// Filter news data for items with picture_large and sort by date
const typedNewsData = newsData as NewsItem[];
const visualData = sortByDateDescending(
    typedNewsData.filter(item => item.picture_large)
);

const PAGE_SIZE = 15; // 3 columns Ã— 5 rows
const pageParam = Astro.url.searchParams.get('page');

// Validate page parameter - this will throw an error for invalid params
// which will be caught by Astro's 404 handling
let currentPage: number;
try {
    currentPage = validatePageParam(pageParam);
} catch (error) {
    return Astro.redirect('/404');
}

// Calculate pagination
const pagination = calculatePagination({
    currentPage,
    totalItems: visualData.length,
    pageSize: PAGE_SIZE
});

// Redirect if page is out of bounds
if (shouldRedirectToFirstPage(currentPage, pagination.totalPages)) {
    return Astro.redirect('/visual?page=1');
}

// Get only the images for current page
const currentImages = visualData.slice(pagination.startIndex, pagination.endIndex);
---

<Layout title="Visual">
	<section>
		<h1>enjoy the psychedelic mayhem in pictures</h1>

		<div class="image-grid">
			{currentImages.map(image => (
				<a href={image.picture_full || image.picture_large} class="image-link">
					<img src={image.picture_large} alt={image.picture_alt || image.description?.[0] || ''} loading="lazy" />
				</a>
			))}
		</div>

		<Pagination 
			currentPage={pagination.currentPage}
			totalPages={pagination.totalPages}
			basePath="/visual"
			showPageInfo={true}
		/>
	</section>
</Layout>

<style>
	section {
		max-width: 800px;
		margin: 0 auto;
		padding: 0 var(--spacing-sm);
	}

	h1 {
		font-size: 2.5rem;
		margin-bottom: 0.5rem;
		color: var(--accent-color);
	}

	.image-grid {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		gap: 2rem;
		margin-bottom: 2rem;
	}

	.image-link {
		display: block;
		aspect-ratio: 1;
		overflow: hidden;
		text-decoration: underline;
		color: var(--text-color);
	}

	.image-link img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform 0.3s ease;
	}

	.image-link:hover img {
		transform: scale(1.05);
	}



	@media (max-width: 768px) {
		.image-grid {
			grid-template-columns: repeat(2, 1fr);
			gap: 1rem;
		}
	}

	@media (max-width: 480px) {
		.image-grid {
			grid-template-columns: 1fr;
		}
	}
</style>

