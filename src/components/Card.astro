---
import { formatDate } from "../utils/date";

interface Props {
    title?: string;
    text: string;
    imageUrl?: string;
    link?: string;
    date?: string;
    type?: "visual" | "video" | "status" | "link";
    picture_full?: string;
    picture_alt?: string;
    post_sub?: Array<{
        picture_large: string;
        picture_full?: string;
        picture_alt?: string;
    }>;
    video?: string;
    isNews?: boolean;
}

const {
    title,
    text,
    imageUrl,
    link,
    date,
    type,
    picture_full,
    picture_alt,
    post_sub,
    video,
    isNews = false,
} = Astro.props;

// For news cards, don't show title if it's a generic type
const shouldShowTitle =
    !isNews ||
    (title && !["Status Update", "Visual", "Video", "Link"].includes(title));
const displayTitle = shouldShowTitle ? title : "";
---

<div class={`card ${isNews ? "card--news" : ""}`}>
    <div class="flex-responsive">
        <div class="text-content">
            {date && <div class="date-display">{formatDate(date)}</div>}
            {displayTitle && <h3>{displayTitle}</h3>}
            {isNews ? <p>{text}</p> : <p set:html={text} />}
            {
                isNews && link && (
                    <div class="link-content">
                        <a
                            href={link}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="link-primary"
                        >
                            View on external site â†’
                        </a>
                    </div>
                )
            }
        </div>
        {
            (isNews && (type === "visual" || type === "video") && imageUrl) ||
            (!isNews && imageUrl) ? (
                <div class={`image-content ${isNews ? "media-content" : ""}`}>
                    {isNews && post_sub && post_sub.length > 0 ? (
                        <div class="images-grid">
                            <a
                                href={picture_full || imageUrl}
                                class="image-link"
                            >
                                <img
                                    src={imageUrl}
                                    alt={picture_alt || text}
                                    loading="lazy"
                                    class="image-responsive"
                                />
                            </a>
                            {post_sub.map((sub) => (
                                <a
                                    href={sub.picture_full || sub.picture_large}
                                    class="image-link"
                                >
                                    <img
                                        src={sub.picture_large}
                                        alt={sub.picture_alt || text}
                                        loading="lazy"
                                        class="image-responsive"
                                    />
                                </a>
                            ))}
                        </div>
                    ) : (
                        <a href={picture_full || imageUrl} class="image-link">
                            <img
                                src={imageUrl}
                                alt={
                                    picture_alt || (isNews ? text : title) || ""
                                }
                                loading="lazy"
                                class="image-responsive"
                            />
                        </a>
                    )}
                    {type === "video" && video && (
                        <video controls class="video-container">
                            <source src={video} type="video/mp4" />
                            Your browser does not support the video tag.
                        </video>
                    )}
                </div>
            ) : null
        }
    </div>
    {!isNews && link && <a href={link} class="link-overlay" />}
</div>
