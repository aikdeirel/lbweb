---
import { formatDate } from '../utils/date';

interface Props {
    title?: string;
    text: string;
    imageUrl?: string;
    link?: string;
    date?: string;
    type?: 'visual' | 'video' | 'status' | 'link';
    picture_full?: string;
    picture_alt?: string;
    post_sub?: Array<{
        picture_large: string;
        picture_full?: string;
        picture_alt?: string;
    }>;
    video?: string;
    isNews?: boolean;
}

const { 
    title, 
    text, 
    imageUrl, 
    link, 
    date, 
    type, 
    picture_full, 
    picture_alt, 
    post_sub, 
    video,
    isNews = false 
} = Astro.props;

// For news cards, don't show title if it's a generic type
const shouldShowTitle = !isNews || (title && !['Status Update', 'Visual', 'Video', 'Link'].includes(title));
const displayTitle = shouldShowTitle ? title : '';
---

<div class:list={["card", { "news-card": isNews }]}>
    <div class="flex-responsive">
        <div class="text-content">
            {date && <div class="date-display">{formatDate(date)}</div>}
            {displayTitle && <h3>{displayTitle}</h3>}
            <p set:html={text}></p>
            {link && (
                <div class="link-content">
                    <a href={link} target="_blank" rel="noopener noreferrer">
                        {isNews ? 'View on external site →' : 'Learn more →'}
                    </a>
                </div>
            )}
        </div>
        {((type === 'visual' || type === 'video') && imageUrl) || (!isNews && imageUrl) ? (
            <div class:list={["image-content", { "media-content": isNews }]}>
                {isNews && post_sub ? (
                    <div class="images-grid">
                        <a href={picture_full || imageUrl} class="image-link">
                            <img src={imageUrl} alt={picture_alt || text} loading="lazy" />
                        </a>
                        {post_sub.map(sub => (
                            <a href={sub.picture_full || sub.picture_large} class="image-link">
                                <img src={sub.picture_large} alt={sub.picture_alt || text} loading="lazy" />
                            </a>
                        ))}
                    </div>
                ) : (
                    <a href={picture_full || imageUrl} class="image-link">
                        <img src={imageUrl} alt={picture_alt || title || ''} loading="lazy" />
                    </a>
                )}
                {type === 'video' && video && (
                    <video controls class="video-container">
                        <source src={video} type="video/mp4" />
                        Your browser does not support the video tag.
                    </video>
                )}
            </div>
        ) : null}
    </div>
    {!isNews && link && <a href={link} class="card-link" />}
</div>

<style>
    .card {
        position: relative;
        background: transparent;
        margin-bottom: var(--spacing-lg);
        max-width: 100%;
        overflow-wrap: break-word;
    }

    .card-link {
        position: absolute;
        inset: 0;
        cursor: pointer;
    }

    .video-container {
        width: 100%;
        margin: 1rem 0;
        border-radius: 4px;
    }

    .link-content {
        margin-top: 1rem;
        max-width: 100%;
        overflow-wrap: break-word;
    }
</style>